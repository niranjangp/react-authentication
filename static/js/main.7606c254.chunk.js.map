{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calcRemTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialisedToken","tokenData","storedToken","localStorage","getItem","storedExpTime","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","newPwdRef","useRef","history","useHistory","form","onSubmit","event","preventDefault","enteredNewPwd","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","emailInpRef","pwdInpRef","isLoading","setIsLoading","auth","url","enteredEmail","enteredPwd","email","ok","json","data","Error","expTime","expiresIn","toISOString","catch","e","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7606c254.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2C6DO\",\"control\":\"ProfileForm_control__3iF44\",\"action\":\"ProfileForm_action__1T9bX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3b07C\",\"logo\":\"MainNavigation_logo__3E11y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2iW6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3d31_\"};","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => { },\r\n    logout: () => { }\r\n});\r\n\r\nconst calcRemTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n    return remainingDuration;\r\n}\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpTime = localStorage.getItem('expirationTime');\r\n    const remainingTime = calcRemTime(storedExpTime);\r\n    if (remainingTime <= 60000) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    };\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialisedToken;\r\n    if (tokenData) {\r\n        initialisedToken = tokenData.token; //localStorage.getItem('token');\r\n    }\r\n    const [token, setToken] = useState(initialisedToken);\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        if (logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, []);\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime', expirationTime)\r\n        const remainingTime = calcRemTime(expirationTime);\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData, logoutHandler]);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const handleLogOut = () => {\n    authCtx.logout();\n  }\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn ?\n            <li><Link to='/auth'>Login</Link></li> :\n            <li><Link to='/profile'>Profile</Link></li>\n          }\n          {isLoggedIn ?\n            <li><button onClick={handleLogOut}>Logout</button></li> :\n            null\n          }\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport { useHistory } from 'react-router-dom';\n\nconst ProfileForm = () => {\n  const newPwdRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const enteredNewPwd = newPwdRef.current.value;\n\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDEyyhOGxTsh-OE59A1AN5JTDLGkSC7vP4', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPwd,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      history.replace('/');\n    })\n\n\n  }\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPwdRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInpRef = useRef();\n  const pwdInpRef = useRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInpRef.current.value;\n    const enteredPwd = pwdInpRef.current.value;\n\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDEyyhOGxTsh-OE59A1AN5JTDLGkSC7vP4'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDEyyhOGxTsh-OE59A1AN5JTDLGkSC7vP4'\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPwd,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errMsg = 'Authentication Failed!';\n            throw new Error(errMsg);\n          });\n        }\n      })\n      .then((data) => {\n        //console.log(data);\n        const expTime = new Date((new Date().getTime() + (+data.expiresIn * 1000)));\n        authCtx.login(data.idToken, expTime.toISOString());\n        history.replace('/');\n      })\n      .catch((e) => {\n        alert(e.message);\n      });\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInpRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={pwdInpRef} />\n        </div>\n        <div className={classes.actions}>\n          {isLoading ? <p>Sending Request...</p> : <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3gHR2\",\"control\":\"AuthForm_control__1HWLt\",\"actions\":\"AuthForm_actions__89EHc\",\"toggle\":\"AuthForm_toggle__87jmY\"};"],"sourceRoot":""}